{"version":3,"sources":["modules/cart/cart.action.js","modules/cart/cart.reducer.js","modules/products/products.action.js","modules/products/products.reducer.js","modules/orders/orders.action.js","modules/orders/orders.reducer.js","modules/rootReducer.js","store.js","components/nav/nav.styles.js","modules/cart/cart.selector.js","components/cartButton/cartButton.styles.js","components/cartButton/cartButton.component.js","components/nav/nav.component.js","modules/products/products.selector.js","components/productList/productList.styles.js","components/product/product.styles.js","components/product/product.component.js","components/productList/productList.component.js","pages/Home.js","components/productListMini/productListMini.styles.js","components/productListMini/productListMini.component.js","pages/Cart.js","pages/Order.js","modules/orders/orders.selector.js","pages/YourOrders.js","App.js","serviceWorker.js","index.js"],"names":["CART_ACTION_TYPES","INITIAL_STATE","cart","PRODUCTS_ACTION_TYPES","ACTION_FETCH_PRODUCTS_SUCCESS","products","type","value","ORDERS_ACTION_TYPES","orders","combineReducers","state","action","item","filter","e","id","name","lastName","items","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","NavContainer","styled","div","MenuContainer","ul","StyledLink","Link","selectCart","selectCartTotal","reduce","total","element","price","selectCartLength","length","selectCartIds","map","CartButtonContainer","connect","cartTotal","cartLength","props","to","Nav","selectProducts","ProductListContainer","ProductContainer","ProductDescription","small","ProductImage","img","ProductTitle","h3","cartItems","dispatch","actionAddItem","ACTION_ADD_ITEM","actionRemoveItem","ACTION_REMOVE_ITEM","src","image","alt","title","cartImage","cartDetails","category","description","includes","onClick","event","Number","target","find","ProductList","list","key","actionFetchProducts","fetch","then","response","json","useEffect","ProductListMiniContainer","ProductListMini","children","cartDescription","actionPlaceOrder","ACTION_PLACE_ORDER","useState","nameInput","setName","lastNameInput","setLastName","onSubmit","preventDefault","onChange","placeholder","selectOrders","idx","App","exact","path","component","Order","Cart","YourOrders","Home","Boolean","location","hostname","match","intialState","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3f0320fa.chunk.js","sourcesContent":["export const CART_ACTION_TYPES = {\n  ADD_ITEM: \"ADD_ITEM\",\n  REMOVE_ITEM: \"REMOVE_ITEM\",\n};\n\nexport const ACTION_ADD_ITEM = (item) => {\n  return {\n    type: CART_ACTION_TYPES.ADD_ITEM,\n    item: item,\n  };\n};\n\nexport const ACTION_REMOVE_ITEM = (id) => {\n  return {\n    type: CART_ACTION_TYPES.REMOVE_ITEM,\n    id: id,\n  };\n};\n","import { CART_ACTION_TYPES } from \"./cart.action\";\n\nconst INITIAL_STATE = {\n  cart: [],\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CART_ACTION_TYPES.ADD_ITEM:\n      return (state = {\n        ...state,\n        cart: [...state.cart, action.item],\n      });\n    case CART_ACTION_TYPES.REMOVE_ITEM:\n      return (state = {\n        ...state,\n        cart: state.cart.filter(e => e.id!== action.id),\n      });\n    default:\n      return state;\n  }\n};\n","export const PRODUCTS_ACTION_TYPES = {\n  FETCH_INIT_PRODUCTS: \"FETCH_INIT_PRODUCTS\",\n  FETCH_PRODUCTS_SUCCESS: \"FETCH_PRODUCTS_SUCCESS\",\n  FETCH_PRODUCTS_LOADING: \"FETCH_PRODUCTS_LOADING\",\n  FETCH_PRODUCTS_ERROR: \"FETCH_PRODUCTS_ERROR\",\n};\n\nexport const ACTION_FETCH_INIT_PRODUCTS = () => {\n  return (dispatch) => {\n    fetch(\"https://fakestoreapi.com/products\")\n      .then((response) => response.json())\n      .then((json) => dispatch(ACTION_FETCH_PRODUCTS_SUCCESS(json)));\n  };\n};\n\nexport const ACTION_FETCH_PRODUCTS_SUCCESS = (products) => {\n  return {\n    type: PRODUCTS_ACTION_TYPES.FETCH_PRODUCTS_SUCCESS,\n    value: products,\n  };\n};\n","import { PRODUCTS_ACTION_TYPES } from './products.action';\n\nconst INITIAL_STATE = {\n  products: [],\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case PRODUCTS_ACTION_TYPES.FETCH_PRODUCTS_SUCCESS:\n      return state = {\n        products: action.value,\n      };\n    default:\n      return state;\n  }\n}","export const ORDERS_ACTION_TYPES = {\n  PLACE_ORDER: \"PLACE_ORDER\",\n};\n\nexport const ACTION_PLACE_ORDER = (name,lastName,items) => {\n  return {\n    type: ORDERS_ACTION_TYPES.PLACE_ORDER,\n    name: name,\n    lastName: lastName,\n    items: items,\n  };\n};","import { ORDERS_ACTION_TYPES } from \"./orders.action\";\n\nconst INITIAL_STATE = {\n  orders: [],\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ORDERS_ACTION_TYPES.PLACE_ORDER:\n      return (state = {\n        ...state,\n        orders: [...state.orders,{name: action.name, lastName: action.lastName, items: action.items}],\n      });\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport cart from './cart/cart.reducer';\nimport products from './products/products.reducer';\nimport orders from './orders/orders.reducer';\n\nexport default combineReducers({\n  cart: cart,\n  products: products,\n  orders: orders,\n});","\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './modules/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport default function configureStore(intialState) {\n  return createStore(\n    rootReducer,\n    intialState,\n    composeEnhancers(\n      applyMiddleware(thunk),\n    )\n  )\n};","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const NavContainer = styled.div`\n    position: fixed;\n    top: 0;\n    width: 100%;\n    background-color: #333;\n    color: white;\n    padding: 1rem;\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const MenuContainer = styled.ul`\n    display: flex;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n`;\n\nexport const StyledLink = styled(Link)`\n    color: white;\n    text-decoration: none;\n    &:hover {\n        color: teal;\n      }\n`;\n","export const selectCart = (state) =>\n  state.cart.cart;\n\nexport const selectCartTotal = (state) =>\n  state.cart.cart.reduce((total,element)=>{\n    return total + element.price\n  },0);\n\nexport const selectCartLength = (state) =>\n  state.cart.cart.length;\n\nexport const selectCartIds = (state) =>\n  state.cart.cart.map(e => e.id);","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const CartButtonContainer = styled(Link)`\n    color: white;\n    text-decoration: none;\n    margin-right: 2rem;\n\n    &:hover {\n        color: teal;\n      }\n`;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { selectCartTotal, selectCartLength } from '../../modules/cart/cart.selector';\n\nimport { CartButtonContainer } from './cartButton.styles';\n\nfunction CartButton(props) {\n  return (\n    <CartButtonContainer to=\"/simple-shop/cart\">\n        ({props.cartLength})\n        Cart: {props.cartTotal}\n    </CartButtonContainer>\n  );\n}\n\nconst mapStateToProps = state => ({\n  cartTotal: selectCartTotal(state),\n  cartLength: selectCartLength(state),\n});\n\nexport default connect(mapStateToProps, null)(CartButton);\n","import React from \"react\";\nimport { NavContainer, MenuContainer, StyledLink } from \"./nav.styles\";\nimport CartButton from \"../cartButton/cartButton.component\";\n\nfunction Nav() {\n  return (\n    <NavContainer>\n      <MenuContainer>\n        <li>\n          <StyledLink to=\"/simple-shop/\">\n            My Shop App\n          </StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"/simple-shop/orders\">\n            Orders\n          </StyledLink>\n        </li>\n      </MenuContainer>\n      <CartButton />\n    </NavContainer>\n  );\n}\n\nexport default Nav;\n","export const selectProducts = (state) =>\n  state.products.products;\n","import styled from \"styled-components\";\n\nexport const ProductListContainer = styled.div`\n    margin: 80px auto 20px auto;\n    max-width: 600px;\n    padding: 16px;\n`;","import styled from \"styled-components\";\n\nexport const ProductContainer = styled.div`\n    display: flex;\n    align-items: center;\n    border: 1px solid black;\n    border-radius: 5px;\n    margin-bottom: 15px;\n`;\n\nexport const ProductDescription = styled.div`\n    width: ${props => props.small ? \"85%\" : \"70%\"};\n    margin: 1rem 1rem 1rem 0;\n`;\n\nexport const ProductImage = styled.img`\n    width: ${props => props.small ? \"15%\" : \"30%\"};\n    margin: 1rem;\n`;\n\nexport const ProductTitle = styled.h3`\n    margin: 0 1rem 1rem 0;\n`;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  ProductContainer,\n  ProductDescription,\n  ProductImage,\n  ProductTitle,\n} from \"./product.styles\";\nimport { ACTION_ADD_ITEM, ACTION_REMOVE_ITEM } from \"../../modules/cart/cart.action\";\nimport { selectProducts } from \"../../modules/products/products.selector\";\nimport { selectCartIds } from \"../../modules/cart/cart.selector\";\n\nfunction Product(props) {\n  const handleAdd = (event) => {\n    const item = props.products.find(\n      (e) => e.id === Number(event.target.id)\n    );\n    props.actionAddItem(item);\n  };\n\n  const handleRemove = (event) => {\n    props.actionRemoveItem(Number(event.target.id));\n  };\n\n  return (\n    <ProductContainer>\n      <ProductImage src={props.image} alt={props.title} small={props.cartImage}/>\n      <ProductDescription small={props.cartDetails}>\n        <ProductTitle>{props.title}</ProductTitle>\n        <p>Category: {props.category}</p>\n        <p>{props.description}</p>\n        <p>Price: {props.price}</p>\n\n        {props.cartItems.includes(props.id) ? (\n          <button id={props.id} onClick={handleRemove}>\n            Remove\n          </button>\n        ) : (\n          <button id={props.id} onClick={handleAdd}>\n            Buy\n          </button>\n        )}\n      </ProductDescription>\n    </ProductContainer>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  products: selectProducts(state),\n  cartItems: selectCartIds(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionAddItem: (item) => dispatch(ACTION_ADD_ITEM(item)),\n  actionRemoveItem: (id) => dispatch(ACTION_REMOVE_ITEM(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);\n","import React from 'react';\nimport { ProductListContainer } from './productList.styles';\nimport Product from '../product/product.component';\n\nfunction ProductList({list}) {\n\n  return (\n    <ProductListContainer>\n      {list.map((e) => {\n        return (\n          <Product\n            key={e.id}\n            title={e.title}\n            category={e.category}\n            description={e.description}\n            price={e.price}\n            image={e.image}\n            id={e.id}\n          />\n        );\n      })}\n    </ProductListContainer>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ACTION_FETCH_INIT_PRODUCTS } from \"../modules/products/products.action\";\nimport { selectProducts } from \"../modules/products/products.selector\";\n\nimport ProductList from \"../components/productList/productList.component\";\n\nfunction Shop(props) {\n  const { actionFetchProducts, products } = props;\n\n  useEffect(() => {\n    actionFetchProducts();\n  }, [actionFetchProducts]);\n\n  return <ProductList list={products} />;\n}\n\nconst mapStateToProps = (state) => ({\n  products: selectProducts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionFetchProducts: () => dispatch(ACTION_FETCH_INIT_PRODUCTS()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);","import styled from \"styled-components\";\n\nexport const ProductListMiniContainer = styled.div`\n    margin: 80px auto 20px auto;\n    max-width: 600px;\n    padding: 16px;\n`;\n","import React from 'react';\nimport { ProductListMiniContainer } from './productListMini.styles';\nimport Product from '../product/product.component';\n\nfunction ProductListMini({children, list}) {\n\n  return (\n    <ProductListMiniContainer>\n      {children}\n      {list.map((e) => {\n        return (\n          <Product\n            key={e.id}\n            title={e.title}\n            price={e.price}\n            image={e.image}\n            id={e.id}\n            cartImage={true}\n            cartDescription={true}\n          />\n        );\n      })}\n    </ProductListMiniContainer>\n  );\n}\n\nexport default ProductListMini;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  selectCart,\n  selectCartTotal,\n  selectCartLength,\n} from \"../modules/cart/cart.selector\";\nimport ProductListMini from \"../components/productListMini/productListMini.component\";\n\nfunction YourCart({ cart, cartTotal, cartLength }) {\n  return (\n    <>\n      <ProductListMini list={cart}>\n      <h3>\n          {cartLength === 0\n            ? \"Cart is empty\"\n            : `You have ${cartLength} ${\n                cartLength === 1\n                  ? \"product\"\n                  : \"products\"\n              }\n              for ${cartTotal} zł`}\n        </h3>\n      </ProductListMini>\n      <Link to='/cart/order' > Order </Link>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  cart: selectCart(state),\n  cartTotal: selectCartTotal(state),\n  cartLength: selectCartLength(state),\n});\n\nexport default connect(mapStateToProps, null)(YourCart);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  selectCart,\n  selectCartTotal,\n  selectCartLength,\n} from \"../modules/cart/cart.selector\";\nimport { ACTION_PLACE_ORDER } from \"../modules/orders/orders.action\";\nimport ProductListMini from \"../components/productListMini/productListMini.component\";\n\nfunction Order({ cart, cartTotal, cartLength, actionPlaceOrder }) {\n  const [nameInput, setName] = useState(\"\");\n  const [lastNameInput, setLastName] = useState(\"\");\n\n  const handleName = (event) => {\n    setName(event.target.value);\n  };\n  const handleLastName = (event) => {\n    setLastName(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    actionPlaceOrder(nameInput,lastNameInput,cart);\n    setName('');\n    setLastName('');\n  };\n\n  return (\n    <>\n      <ProductListMini list={cart}>\n        <h3>\n          You want to buy {cartLength}{\" \"}\n          {cartLength === 1 ? \"product\" : \"products\"} for {cartTotal} zł\n        </h3>\n        <form onSubmit={handleSubmit}>\n          <input value={nameInput} onChange={handleName} placeholder=\"Your name...\"/>\n          <input value={lastNameInput} onChange={handleLastName} placeholder=\"Your last name...\"/>\n          <input type=\"submit\" value=\"Buy items\" />\n        </form>\n      </ProductListMini>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  cart: selectCart(state),\n  cartTotal: selectCartTotal(state),\n  cartLength: selectCartLength(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actionPlaceOrder: (name,lastName,items) => dispatch(ACTION_PLACE_ORDER(name,lastName,items)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Order);\n","export const selectOrders = (state) =>\n  state.orders.orders;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectOrders } from \"../modules/orders/orders.selector\"\nimport ProductListMini from \"../components/productListMini/productListMini.component\";\n\nfunction YourOrders({ orders }) {\n  return (\n    <>\n      {orders.map((e, idx)=> {\n          return (\n            <ProductListMini key={idx} list={e.items}>\n                <h3>Order no.{idx}</h3>\n                <h3>{e.name + ' ' + e.lastName}</h3>\n            </ProductListMini>\n          )\n      })}\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  orders: selectOrders(state),\n});\n\nexport default connect(mapStateToProps, null)(YourOrders);","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Nav from \"./components/nav/nav.component\";\nimport Home from \"./pages/Home\";\nimport Cart from \"./pages/Cart\";\nimport Order from \"./pages/Order\";\nimport YourOrders from \"./pages/YourOrders\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/simple-shop/cart/order\" component={Order} />\n          <Route exact path=\"/simple-shop/cart\" component={Cart} />\n          <Route exact path=\"/simple-shop/orders\" component={YourOrders} />\n          <Route exact path=\"/simple-shop\" component={Home} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}